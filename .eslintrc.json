{
    "extends": ["eslint:recommended", "eslint-config-google"],
  
    "env": {
      "es6": true,
      "browser": true,
      "jasmine": true,
      "jquery": true
    },
  
    "parserOptions": {
      "ecmaVersion": 2017,
      "ecmaFeatures": {
        "experimentalObjectRestSpread": true
      },
      "sourceType": "module"
    },

    "rules": {
      "eqeqeq": 2,
      "comma-dangle": [
        1, "always-multiline"
      ],
      "indent": [2, 2, {
        "SwitchCase": 1
      }],
      "id-length": [1, {
        "min": 2,
        "max": 25,
        "properties": "never",
        // x, y, z - Point coordinates
        // i, j, k - Loop indexes
        // k, v - Key, Value
        // a, b - common parameter names in sorting comparison helper functions
        // e - exception
        // $, _ - libraries
        "exceptions": ["x", "y", "z", "i", "j", "k", "v", "a", "b", "e", "$", "_"]
      }],
      "require-jsdoc": 0,
      "space-before-function-paren": [2, {
        "anonymous": "always",
        "named": "never"
      }],
      "max-len": [1, 80, 2, {
        "ignoreComments": true,
        "ignoreUrls": true,
        "ignorePattern": "^import (.+ from )?'.+';$"
      }],
      "quotes": [1, "single", {
        "avoidEscape": true
      }],
      "no-implicit-coercion": [2, {
        "boolean": false
      }],
      "no-inline-comments": 0,
      "no-invalid-this": 0,
      "no-negated-condition": 0,
      "no-unused-vars": [2, {
        "args": "none",
        "vars": "all"
      }],
      // Each variable declaration must have its own var keyword
      "one-var": [2, "never"],
      "prefer-rest-params": 0,
      "quote-props": [2, "as-needed", {
        "numbers": true,
        "keywords": true
      }],
      "vars-on-top": 2,
      // CanJS uses a lot of the following, thus the exceptions...
      //
      // NOTE: camelCase check is disabled for object properties, because 3rd
      // party libraries' APIs might expect object arguments with properties
      // following a different naming conventions, and trying to work around
      // that just to make the linter happy is simply not worth it.
      "camelcase":  [1, {
        "properties": "never"
      }],
      "new-cap": 0,
      "no-new": 0
    }
  }
  